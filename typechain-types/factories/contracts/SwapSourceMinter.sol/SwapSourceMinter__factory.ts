/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SwapSourceMinter,
  SwapSourceMinterInterface,
} from "../../../contracts/SwapSourceMinter.sol/SwapSourceMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "enum SwapSourceMinter.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "ghoAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitGHO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "testPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "testPermitSwapGHOForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "testSwapGHOForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61014060405273c4bf5cbdabe595361438f8c6a187bdc330539c6073ffffffffffffffffffffffffffffffffffffffff1660c09073ffffffffffffffffffffffffffffffffffffffff1681525073fff9976782d46cc05630d1f6ebab18b2324d6b1473ffffffffffffffffffffffffffffffffffffffff1660e09073ffffffffffffffffffffffffffffffffffffffff16815250733fc91a3afd70395cd496c647d5a6cc9d4b2b7fad73ffffffffffffffffffffffffffffffffffffffff166101009073ffffffffffffffffffffffffffffffffffffffff16815250348015620000e857600080fd5b50604051620028e4380380620028e483398181016040528101906200010e9190620004f4565b338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017a90620005b1565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200020a5762000209816200035b60201b60201c565b5b5050508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff166101208173ffffffffffffffffffffffffffffffffffffffff168152505060a05173ffffffffffffffffffffffffffffffffffffffff1663095ea7b36080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016200030b929190620005ff565b6020604051808303816000875af11580156200032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000351919062000669565b505050506200070d565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620003cc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003c390620006eb565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004bc826200048f565b9050919050565b620004ce81620004af565b8114620004da57600080fd5b50565b600081519050620004ee81620004c3565b92915050565b60008060006060848603121562000510576200050f6200048a565b5b60006200052086828701620004dd565b93505060206200053386828701620004dd565b92505060406200054686828701620004dd565b9150509250925092565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006200059960188362000550565b9150620005a68262000561565b602082019050919050565b60006020820190508181036000830152620005cc816200058a565b9050919050565b620005de81620004af565b82525050565b6000819050919050565b620005f981620005e4565b82525050565b6000604082019050620006166000830185620005d3565b620006256020830184620005ee565b9392505050565b60008115159050919050565b62000643816200062c565b81146200064f57600080fd5b50565b600081519050620006638162000638565b92915050565b6000602082840312156200068257620006816200048a565b5b6000620006928482850162000652565b91505092915050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000620006d360178362000550565b9150620006e0826200069b565b602082019050919050565b600060208201905081810360008301526200070681620006c4565b9050919050565b60805160a05160c05160e051610100516101205161213a620007aa60003960008181610c4f01528181610d970152610e9d0152600081816102e8015281816104bb0152610cb001526000610e080152600081816102ab0152818161047e01528181610c7301528181610d4a01528181610d760152610dcc015260006107ea01526000818161083e0152818161090901526109ae015261213a6000f3fe6080604052600436106100aa5760003560e01c8063623c4b7111610064578063623c4b71146101ae57806379ba5097146101d75780638da5cb5b146101ee578063c31c9c0714610219578063eb6ceffd14610244578063f2fde38b1461026d576100b1565b80623bd97e146100b6578063089fe6aa146100df5780631a358ecc1461010a5780633aeac4e11461013357806343c9d7821461015c57806351cff8d914610185576100b1565b366100b157005b600080fd5b3480156100c257600080fd5b506100dd60048036038101906100d89190611413565b610296565b005b3480156100eb57600080fd5b506100f46102a3565b604051610101919061145e565b60405180910390f35b34801561011657600080fd5b50610131600480360381019061012c91906114e8565b6102a9565b005b34801561013f57600080fd5b5061015a600480360381019061015591906115d3565b610372565b005b34801561016857600080fd5b50610183600480360381019061017e9190611613565b61047c565b005b34801561019157600080fd5b506101ac60048036038101906101a7919061168e565b61053a565b005b3480156101ba57600080fd5b506101d560048036038101906101d09190611720565b6105fe565b005b3480156101e357600080fd5b506101ec610a8f565b005b3480156101fa57600080fd5b50610203610c24565b60405161021091906117aa565b60405180910390f35b34801561022557600080fd5b5061022e610c4d565b60405161023b9190611824565b60405180910390f35b34801561025057600080fd5b5061026b60048036038101906102669190611613565b610c71565b005b34801561027957600080fd5b50610294600480360381019061028f919061168e565b610d2f565b005b61029f81610d43565b5050565b610bb881565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf337f000000000000000000000000000000000000000000000000000000000000000088888888886040518863ffffffff1660e01b815260040161032e979695949392919061186c565b600060405180830381600087803b15801561034857600080fd5b505af115801561035c573d6000803e3d6000fd5b5050505061036986610d43565b50505050505050565b61037a610f3f565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103b591906117aa565b602060405180830381865afa1580156103d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f691906118f0565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b815260040161043392919061191d565b6020604051808303816000875af1158015610452573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610476919061197e565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf337f000000000000000000000000000000000000000000000000000000000000000088888888886040518863ffffffff1660e01b8152600401610501979695949392919061186c565b600060405180830381600087803b15801561051b57600080fd5b505af115801561052f573d6000803e3d6000fd5b505050505050505050565b610542610f3f565b600047905060008273ffffffffffffffffffffffffffffffffffffffff168260405161056d906119dc565b60006040518083038185875af1925050503d80600081146105aa576040519150601f19603f3d011682016040523d82523d6000602084013e6105af565b606091505b50509050806105f9573383836040517f9d11f5630000000000000000000000000000000000000000000000000000000081526004016105f0939291906119f1565b60405180910390fd5b505050565b61060781610d43565b5060006040518060a001604052808560405160200161062691906117aa565b6040516020818303038152906040528152602001863360405160240161064c91906117aa565b6040516020818303038152906040527f6a627842000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516024016106da929190611ab8565b6040516020818303038152906040527fb510391f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050508152602001600067ffffffffffffffff81111561077757610776611ae8565b5b6040519080825280602002602001820160405280156107b057816020015b61079d6113a8565b8152602001906001900390816107955790505b5081526020016001808111156107c9576107c8611b17565b5b8560018111156107dc576107db611b17565b5b146107e857600061080a565b7f00000000000000000000000000000000000000000000000000000000000000005b73ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded88846040518363ffffffff1660e01b8152600401610897929190611d26565b602060405180830381865afa1580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d891906118f0565b905060006001808111156108ef576108ee611b17565b5b85600181111561090257610901611b17565b5b036109ac577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f989856040518363ffffffff1660e01b8152600401610962929190611d26565b6020604051808303816000875af1158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190611d6b565b9050610a4e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f9838a866040518463ffffffff1660e01b8152600401610a08929190611d26565b60206040518083038185885af1158015610a26573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a4b9190611d6b565b90505b7f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a81604051610a7d9190611d98565b60405180910390a15050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1690611e10565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf337f000000000000000000000000000000000000000000000000000000000000000088888888886040518863ffffffff1660e01b8152600401610cf6979695949392919061186c565b600060405180830381600087803b158015610d1057600080fd5b505af1158015610d24573d6000803e3d6000fd5b505050505050505050565b610d37610f3f565b610d4081610fcf565b50565b6000610d717f00000000000000000000000000000000000000000000000000000000000000003330856110fb565b610dbc7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000084611253565b60006040518061010001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1681526020017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b8152600401610ef49190611ef0565b6020604051808303816000875af1158015610f13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3791906118f0565b915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc490611f58565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361103d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103490611fc4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401611132939291906119f1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161119c9190612015565b6000604051808303816000865af19150503d80600081146111d9576040519150601f19603f3d011682016040523d82523d6000602084013e6111de565b606091505b509150915081801561120c575060008151148061120b57508080602001905181019061120a919061197e565b5b5b61124b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124290612078565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b858560405160240161128892919061191d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516112f29190612015565b6000604051808303816000865af19150503d806000811461132f576040519150601f19603f3d011682016040523d82523d6000602084013e611334565b606091505b50915091508180156113625750600081511480611361575080806020019051810190611360919061197e565b5b5b6113a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611398906120e4565b60405180910390fd5b5050505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b600080fd5b6000819050919050565b6113f0816113dd565b81146113fb57600080fd5b50565b60008135905061140d816113e7565b92915050565b600060208284031215611429576114286113d8565b5b6000611437848285016113fe565b91505092915050565b600062ffffff82169050919050565b61145881611440565b82525050565b6000602082019050611473600083018461144f565b92915050565b600060ff82169050919050565b61148f81611479565b811461149a57600080fd5b50565b6000813590506114ac81611486565b92915050565b6000819050919050565b6114c5816114b2565b81146114d057600080fd5b50565b6000813590506114e2816114bc565b92915050565b60008060008060008060c08789031215611505576115046113d8565b5b600061151389828a016113fe565b965050602061152489828a016113fe565b955050604061153589828a016113fe565b945050606061154689828a0161149d565b935050608061155789828a016114d3565b92505060a061156889828a016114d3565b9150509295509295509295565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115a082611575565b9050919050565b6115b081611595565b81146115bb57600080fd5b50565b6000813590506115cd816115a7565b92915050565b600080604083850312156115ea576115e96113d8565b5b60006115f8858286016115be565b9250506020611609858286016115be565b9150509250929050565b600080600080600060a0868803121561162f5761162e6113d8565b5b600061163d888289016113fe565b955050602061164e888289016113fe565b945050604061165f8882890161149d565b9350506060611670888289016114d3565b9250506080611681888289016114d3565b9150509295509295909350565b6000602082840312156116a4576116a36113d8565b5b60006116b2848285016115be565b91505092915050565b600067ffffffffffffffff82169050919050565b6116d8816116bb565b81146116e357600080fd5b50565b6000813590506116f5816116cf565b92915050565b6002811061170857600080fd5b50565b60008135905061171a816116fb565b92915050565b600080600080600060a0868803121561173c5761173b6113d8565b5b600061174a888289016116e6565b955050602061175b888289016115be565b945050604061176c888289016115be565b935050606061177d8882890161170b565b925050608061178e888289016113fe565b9150509295509295909350565b6117a481611595565b82525050565b60006020820190506117bf600083018461179b565b92915050565b6000819050919050565b60006117ea6117e56117e084611575565b6117c5565b611575565b9050919050565b60006117fc826117cf565b9050919050565b600061180e826117f1565b9050919050565b61181e81611803565b82525050565b60006020820190506118396000830184611815565b92915050565b611848816113dd565b82525050565b61185781611479565b82525050565b611866816114b2565b82525050565b600060e082019050611881600083018a61179b565b61188e602083018961179b565b61189b604083018861183f565b6118a8606083018761183f565b6118b5608083018661184e565b6118c260a083018561185d565b6118cf60c083018461185d565b98975050505050505050565b6000815190506118ea816113e7565b92915050565b600060208284031215611906576119056113d8565b5b6000611914848285016118db565b91505092915050565b6000604082019050611932600083018561179b565b61193f602083018461183f565b9392505050565b60008115159050919050565b61195b81611946565b811461196657600080fd5b50565b60008151905061197881611952565b92915050565b600060208284031215611994576119936113d8565b5b60006119a284828501611969565b91505092915050565b600081905092915050565b50565b60006119c66000836119ab565b91506119d1826119b6565b600082019050919050565b60006119e7826119b9565b9150819050919050565b6000606082019050611a06600083018661179b565b611a13602083018561179b565b611a20604083018461183f565b949350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611a62578082015181840152602081019050611a47565b60008484015250505050565b6000601f19601f8301169050919050565b6000611a8a82611a28565b611a948185611a33565b9350611aa4818560208601611a44565b611aad81611a6e565b840191505092915050565b6000604082019050611acd600083018561179b565b8181036020830152611adf8184611a7f565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611b4f816116bb565b82525050565b600082825260208201905092915050565b6000611b7182611a28565b611b7b8185611b55565b9350611b8b818560208601611a44565b611b9481611a6e565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611bd481611595565b82525050565b611be3816113dd565b82525050565b604082016000820151611bff6000850182611bcb565b506020820151611c126020850182611bda565b50505050565b6000611c248383611be9565b60408301905092915050565b6000602082019050919050565b6000611c4882611b9f565b611c528185611baa565b9350611c5d83611bbb565b8060005b83811015611c8e578151611c758882611c18565b9750611c8083611c30565b925050600181019050611c61565b5085935050505092915050565b600060a0830160008301518482036000860152611cb88282611b66565b91505060208301518482036020860152611cd28282611b66565b91505060408301518482036040860152611cec8282611c3d565b9150506060830151611d016060860182611bcb565b5060808301518482036080860152611d198282611b66565b9150508091505092915050565b6000604082019050611d3b6000830185611b46565b8181036020830152611d4d8184611c9b565b90509392505050565b600081519050611d65816114bc565b92915050565b600060208284031215611d8157611d806113d8565b5b6000611d8f84828501611d56565b91505092915050565b6000602082019050611dad600083018461185d565b92915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000611dfa601683611db3565b9150611e0582611dc4565b602082019050919050565b60006020820190508181036000830152611e2981611ded565b9050919050565b611e3981611440565b82525050565b611e4881611575565b82525050565b61010082016000820151611e656000850182611bcb565b506020820151611e786020850182611bcb565b506040820151611e8b6040850182611e30565b506060820151611e9e6060850182611bcb565b506080820151611eb16080850182611bda565b5060a0820151611ec460a0850182611bda565b5060c0820151611ed760c0850182611bda565b5060e0820151611eea60e0850182611e3f565b50505050565b600061010082019050611f066000830184611e4e565b92915050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611f42601683611db3565b9150611f4d82611f0c565b602082019050919050565b60006020820190508181036000830152611f7181611f35565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611fae601783611db3565b9150611fb982611f78565b602082019050919050565b60006020820190508181036000830152611fdd81611fa1565b9050919050565b6000611fef82611a28565b611ff981856119ab565b9350612009818560208601611a44565b80840191505092915050565b60006120218284611fe4565b915081905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b6000612062600383611db3565b915061206d8261202c565b602082019050919050565b6000602082019050818103600083015261209181612055565b9050919050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b60006120ce600283611db3565b91506120d982612098565b602082019050919050565b600060208201905081810360008301526120fd816120c1565b905091905056fea264697066735822122088892c2404feacebf778d541485f3e08ce351d36a0603921f0eb645b6552fac164736f6c63430008130033";

type SwapSourceMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapSourceMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapSourceMinter__factory extends ContractFactory {
  constructor(...args: SwapSourceMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    link: AddressLike,
    _swapRouter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router,
      link,
      _swapRouter,
      overrides || {}
    );
  }
  override deploy(
    router: AddressLike,
    link: AddressLike,
    _swapRouter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, link, _swapRouter, overrides || {}) as Promise<
      SwapSourceMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SwapSourceMinter__factory {
    return super.connect(runner) as SwapSourceMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapSourceMinterInterface {
    return new Interface(_abi) as SwapSourceMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapSourceMinter {
    return new Contract(address, _abi, runner) as unknown as SwapSourceMinter;
  }
}
